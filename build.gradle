plugins {
	id "com.crystaelix.loom" version "jitpack-af214fdb"
	id "eclipse"
	id "idea"
	id "maven-publish"
	id "net.kyori.blossom" version "[1,2)"
	id "me.modmuss50.mod-publish-plugin" version "0.5.0"
}

repositories {
	mavenCentral()
	flatDir {
		dirs "libs"
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.parchmentmc.net/"
			}
		}
		filter {
			includeGroup "org.parchmentmc.data"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.blamejared.com/"
			}
		}
		filter {
			includeGroup "mezz.jei"
			includeGroup "vazkii.patchouli"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.covers1624.net/"
			}
		}
		filter {
			includeGroup "io.codechicken"
			includeGroup "com.brandon3055.brandonscore"
			includeGroup "com.brandon3055.draconicevolution"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://cursemaven.com/"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://modmaven.dev/"
			}
		}
		filter {
			includeGroup "appeng"
			includeGroup "mekanism"
		}
	}
}

sourceSets {
	main
}

def mcVersion = "1.20.1"
def modName = "PackagedDraconic"
def modId = "packageddraconic"
def specVersion = "3"
def vendor = "thelm"

group = "thelm.packageddraconic"
version = "3.1.0.1"

archivesBaseName = "${modName}-${mcVersion}"

java {
	toolchain.languageVersion = JavaLanguageVersion.of(17)
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

loom {
	silentMojangMappingsLicense()
	interfaceInjection.enableDependencyInterfaceInjection = false
	runs {
		configureEach {
			property "forge.logging.console.level", "debug"
		}
		client
		server
	}
}

dependencies {
	// Log4j
	implementation "org.apache.logging.log4j:log4j-core:2.22.1"

	// Minecraft
	minecraft "com.mojang:minecraft:1.20.1"
	mappings loom.layered {
		officialMojangMappings()
		parchment "org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip"
	}
	forge "net.minecraftforge:forge:1.20.1-47.3.1"

	// Dependencies
	modImplementation "curse.maven:packagedauto-308380:5580574"
	modImplementation "io.codechicken:CodeChickenLib:1.20.1-4.4.0.512:universal"
	modImplementation "com.brandon3055.brandonscore:BrandonsCore:1.20.1-3.2.1.302:universal"
	modImplementation "com.brandon3055.draconicevolution:Draconic-Evolution:1.20.1-3.1.2.583:universal"
	modImplementation("mezz.jei:jei-1.20.1-forge:15.8.0.16") {transitive = false}
	modImplementation "appeng:appliedenergistics2-forge:15.2.9"
	modImplementation "vazkii.patchouli:Patchouli:1.20.1-84-FORGE"

	// Testing
	modImplementation "mekanism:Mekanism:1.20.1-10.4.8.43"
	modImplementation "curse.maven:applied-mekanistics-574300:4842281"

	// Performance
	modImplementation "curse.maven:yeetusexperimentus-635427:4680832"
	implementation "io.github.llamalad7:mixinextras-forge:0.3.6"
	modImplementation "curse.maven:modernfix-790626:5541516"
	modImplementation "curse.maven:ferritecore-429235:4810975"
}

def replacements = [
	"0@VERSION@": version
]

blossom {
	replaceToken(replacements)
}

processResources {
	inputs.properties(replacements)
	filesMatching(["mcmod.info", "META-INF/mods.toml", "META-INF/neoforge.mods.toml"]) {
		filter {
			it.replace(replacements)
		}
	}
}

def manifestAttributes = [
	"Specification-Title": modName,
	"Specification-Vendor": vendor,
	"Specification-Version": specVersion,
	"Implementation-Title": archivesBaseName,
	"Implementation-Version": version,
	"Implementation-Vendor": vendor
]

jar {
	manifest.attributes(manifestAttributes)
}

sourcesJar {
	manifest.attributes(manifestAttributes)
}

publishMods {
	file = remapJar.archiveFile
	version = displayName = "${mcVersion}-${project.version}"
	changelog = file("changelog.md").text
	type = BETA
	modLoaders.addAll("forge", "neoforge")
	additionalFiles.from(remapSourcesJar.archiveFile)

	curseforge {
		accessToken = providers.gradleProperty("curseforge.token")
		projectId = "833931"
		minecraftVersions.add(mcVersion)
		requires "packagedauto", "draconic-evolution"
		optional "applied-energistics-2"
	}

	modrinth {
		accessToken = providers.gradleProperty("modrinth.token")
		projectId = "dNduUQBR"
		minecraftVersions.add(mcVersion)
		requires "packagedauto"
		optional "ae2"
	}
}
